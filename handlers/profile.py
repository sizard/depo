from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    ContextTypes, 
    CommandHandler, 
    MessageHandler, 
    filters,
    ConversationHandler
)

from models import User, Railway
from database import session_scope
from handlers.common import show_main_menu, cancel

# –°–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
EDIT_NAME, EDIT_POSITION, EDIT_RAILWAY, EDIT_BRANCH = range(4)

async def show_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    with session_scope() as session:
        user = session.query(User).filter(User.id == update.effective_user.id).first()
        if not user:
            await update.message.reply_text(
                '‚ùå –û—à–∏–±–∫–∞: –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.\n'
                '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start'
            )
            return
        
        await update.message.reply_text(
            'üë§ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n'
            f'üìã –§–ò–û: {user.full_name}\n'
            f'üíº –î–æ–ª–∂–Ω–æ—Å—Ç—å: {user.position}\n'
            f'üöÇ –î–æ—Ä–æ–≥–∞: {user.railway.value}\n'
            f'üè¢ –û—Ç–¥–µ–ª–µ–Ω–∏–µ: {user.branch}\n'
            f'üîë –†–æ–ª—å: {"üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" if user.is_admin else "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"}\n\n'
            'üìù –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /edit_profile',
            parse_mode='HTML'
        )

async def start_edit_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞—á–∞–ª–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è"""
    await update.message.reply_text(
        'üìù <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è</b>\n\n'
        'üë§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –§–ò–û (–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ):',
        parse_mode='HTML'
    )
    return EDIT_NAME

async def edit_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏"""
    full_name = update.message.text.strip()
    if len(full_name.split()) < 2:
        await update.message.reply_text(
            '‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –§–ò–û\n'
            '–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á'
        )
        return EDIT_NAME
    
    context.user_data['full_name'] = full_name
    
    await update.message.reply_text(
        '‚úÖ –§–ò–û –æ–±–Ω–æ–≤–ª–µ–Ω–æ!\n\n'
        'üíº –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –¥–æ–ª–∂–Ω–æ—Å—Ç—å:'
    )
    return EDIT_POSITION

async def edit_position(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏"""
    position = update.message.text.strip()
    if len(position) < 3:
        await update.message.reply_text(
            '‚ö†Ô∏è –î–æ–ª–∂–Ω–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ö–æ—Ç—è –±—ã 3 —Å–∏–º–≤–æ–ª–∞.\n'
            'üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:'
        )
        return EDIT_POSITION
    
    context.user_data['position'] = position
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–æ—Ä–æ–≥–∞–º–∏
    keyboard = [[KeyboardButton(railway.value)] for railway in Railway]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    await update.message.reply_text(
        'üöÇ –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –¥–æ—Ä–æ–≥—É:',
        reply_markup=reply_markup
    )
    return EDIT_RAILWAY

async def edit_railway(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–æ—Ä–æ–≥–∏"""
    railway = update.message.text.strip()
    try:
        context.user_data['railway'] = Railway(railway)
    except ValueError:
        await update.message.reply_text(
            '‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Ä–æ–≥—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.'
        )
        return EDIT_RAILWAY
    
    await update.message.reply_text(
        'üè¢ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ:'
    )
    return EDIT_BRANCH

async def edit_branch(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –æ—Ç–¥–µ–ª–µ–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è"""
    branch = update.message.text.strip()
    if len(branch) < 2:
        await update.message.reply_text('‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ')
        return EDIT_BRANCH
    
    try:
        with session_scope() as session:
            user = session.query(User).filter(User.id == update.effective_user.id).first()
            if not user:
                await update.message.reply_text('‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
                return ConversationHandler.END
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user.full_name = context.user_data['full_name']
            user.position = context.user_data['position']
            user.railway = context.user_data['railway']
            user.branch = branch
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            session.commit()
            
            await update.message.reply_text(
                '‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!\n\n'
                f'üë§ –§–ò–û: {user.full_name}\n'
                f'üíº –î–æ–ª–∂–Ω–æ—Å—Ç—å: {user.position}\n'
                f'üöÇ –î–æ—Ä–æ–≥–∞: {user.railway.value}\n'
                f'üè¢ –û—Ç–¥–µ–ª–µ–Ω–∏–µ: {user.branch}'
            )
            
            return await show_main_menu(update, context)
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è: {str(e)}")
        await update.message.reply_text(
            '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è.\n'
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.'
        )
        return ConversationHandler.END

# –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
edit_profile_handler = ConversationHandler(
    entry_points=[CommandHandler('edit_profile', start_edit_profile)],
    states={
        EDIT_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, edit_name)],
        EDIT_POSITION: [MessageHandler(filters.TEXT & ~filters.COMMAND, edit_position)],
        EDIT_RAILWAY: [MessageHandler(filters.TEXT & ~filters.COMMAND, edit_railway)],
        EDIT_BRANCH: [MessageHandler(filters.TEXT & ~filters.COMMAND, edit_branch)],
    },
    fallbacks=[CommandHandler('cancel', cancel)]
)

# –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"
profile_handler = MessageHandler(
    filters.Text(["üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"]), 
    show_profile
)
